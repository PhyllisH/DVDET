
from ctypes import pointer
from tkinter import font
from certifi import where
from matplotlib import markers
import matplotlib.pyplot as plt
plt.style.use('ggplot')
import numpy as np
import math

# 2 round type 0-4: [1, 0], [0.8, 0.2], [0.5, 0.5], [0.2, 0.8], [0, 1]

# 3 round type 0-4: [1, 0, 0], [0.3, 0.3, 0.4], [0.2, 0.6, 0.2], [0, 1, 0], [0, 0, 1]

# bandwidth: 40000 20000 10000 5000 2500 1250 625 312 156
two_rounds_ratio = [[1, 0], [0.8, 0.2], [0.5, 0.5], [0.2, 0.8], [0, 1]][::-1][1:]
three_rounds_ratio = [[1, 0, 0], [0.3, 0.3, 0.4], [0.2, 0.6, 0.2], [0, 1, 0], [0, 0, 1]][::-1][2:]
two_round_type_0 = [
    [0.6541428543270932, 0.6431035020269503, 0.636864184660348, 0.6347577257377547, 0.6292723353758033, 0.6258337817691905, 0.6223667732843885, 0.6132741843033322, 0.6089240634910991],
    [0.44537266245904567, 0.4355745609409967, 0.42718498052534026, 0.4204875944487203, 0.4142162524958794, 0.4137498268790248, 0.4147500001878596, 0.4044200563605526, 0.3963510281894904],
    [0.1696492669376734, 0.15832060414270052, 0.15453779825372913, 0.15344712809381625, 0.1522994316127157, 0.15240024542127462, 0.14529502239888134, 0.1469370843147465, 0.1431858393865585]
]

two_round_type_1 = [
    [0.6814174783894742, 0.6622147784006256, 0.6608370864407617, 0.6487822534911235, 0.6371364215752187, 0.6323544638026377, 0.6273210957663498, 0.611892870876291, 0.6080619816905302],
    [0.4651715510482234, 0.4509360074313511, 0.44585877762562115, 0.43646356946397047, 0.42382024463373774, 0.4222086617924156, 0.4184934555433712, 0.404143623733605, 0.39720152408161524],
    [0.17590488252271566, 0.16236048446744952, 0.16351739324205417, 0.16422492983041245, 0.1603228615577348, 0.15755631023005662, 0.15143319670534597, 0.14941817240047353, 0.1468025506952497]
]

two_round_type_2 = [
    [0.6683891301221743, 0.6637014325734151, 0.6624900476118049, 0.6575211057874004, 0.6409901190589179, 0.6324166145210796, 0.625595894817299, 0.6124421855729297, 0.6117300173674554],
    [0.4575618291005776, 0.4558420547119713, 0.44594427656065566, 0.4396151629774338, 0.42915848719275423, 0.4217642791302806, 0.41811978806801353, 0.40255617435616026, 0.3986511614420172],
    [0.17267961443718197, 0.16537765971831428, 0.1645993709129077, 0.16552484961185435, 0.15919211915299414, 0.150152370433566, 0.1520811498487989, 0.1508241978454309, 0.15108268302276942]
]

two_round_type_3 = [
    [0.6731783012124624, 0.6683753613164056, 0.6599323676000273, 0.6494303793878744, 0.6432425650603281, 0.6301139637819143, 0.6190108618384378, 0.6182037744077271, 0.6140235705462065],
    [0.4591661648483392, 0.45137142652661794, 0.44198465696565364, 0.4360934562886288, 0.43509579947521176, 0.4216577345222109, 0.41125545471874764, 0.40216324516897184, 0.3957313805412956],
    [0.17802952416286433, 0.16722703211130577, 0.16249609706924173, 0.16058217273689462, 0.15632418922614716, 0.1540293805722106, 0.15430740336846735, 0.1510272278066225, 0.15152254042939645]
]

two_round_type_4 = [
    [0.637291166650816, 0.6315288182047232, 0.6240847752901703, 0.6277418279598723, 0.6227575068324955, 0.6209865508287008, 0.6207245538171648, 0.614403004070951, 0.6110130933070118],
    [0.4472090423890554, 0.4374360723690687, 0.42243863811974525, 0.42155354911844484, 0.4137049508732648, 0.40350370864895496, 0.4013070581885636, 0.3972376597798457, 0.3921488280517149],
    [0.1728868877677411, 0.15897852822638658, 0.15178467386537384, 0.15184740599087512, 0.15358934919958986, 0.15195514916379846, 0.14724840441812218, 0.14730276886031066, 0.14532586160025857]
]

three_round_type_0 = [
    [0.6446338241821825, 0.639705364084384, 0.6290002189380682, 0.6267853733009711, 0.6268411822897928, 0.621944723412937, 0.6180604956470237, 0.6094750685324638, 0.6059057895845863],
    [0.443923862204974, 0.4387336109845938, 0.4286973838653375, 0.4273940126039252, 0.42873518329629157, 0.4205524848762992, 0.41782574554773066, 0.4046849410813471, 0.402553307339273],
    [0.16592140334138472, 0.15604759671192472, 0.14684865161613223, 0.151245823902217, 0.15600120007914162, 0.15054677406673436, 0.14455422339073482, 0.1391587045378251, 0.13719662440987854]
]

three_round_type_1 = [
    [0.6727099690084547, 0.6703246290127433, 0.6695800599709558, 0.6542186403486663, 0.6411905731905935, 0.6295876777819448, 0.623666845778064, 0.6164374375808134, 0.6102721952731893],
    [0.4678622995073114, 0.4676618523249982, 0.46559262847456784, 0.45528537996882384, 0.44139419748856296, 0.4288018757940626, 0.42134712790184015, 0.41142291436425377, 0.40554094668738166],
    [0.1749423526737729, 0.1730535159833306, 0.17492957650616756, 0.17094937501892932, 0.1660637343232034, 0.15657500707340619, 0.15554428039565343, 0.15138100662479032, 0.14603184774052605]
]

three_round_type_2 = [
    [0.6781240777868359, 0.6730309382517483, 0.6681298737063445, 0.6510299372509155, 0.6326142604350519, 0.6309819618384797, 0.6214484512413193, 0.615944300378626, 0.6085408450494538],
    [0.47620591195386563, 0.4688074450093318, 0.4650357272793462, 0.4517027466681088, 0.43388792916463775, 0.4283037593220019, 0.41918527913472353, 0.4118995258865292, 0.4040303064290727],
    [0.1860493566477845, 0.171770691665572, 0.17335651804429114, 0.16824470776214687, 0.16368866350700598, 0.15699767678482304, 0.15595034301475577, 0.15063646345450774, 0.14624767721414056]
]

three_round_type_3 = [
    [0.6199850847129234, 0.6241848657283268, 0.6096774215633033, 0.6118018267448465, 0.6151994121170014, 0.616223713220445, 0.6140648945527151, 0.609144607208747, 0.6066244487023532],
    [0.4337818637515187, 0.4319718061852734, 0.42083103058115845, 0.4198133971766546, 0.4164143113858308, 0.4146918240683547, 0.41082447466343863, 0.4043333329692547, 0.40419626152803656],
    [0.165150298907101, 0.1564655386440336, 0.14500859654922144, 0.14462906738985198, 0.1462026129758986, 0.14841593201816078, 0.1497669187610684, 0.1460588760975365, 0.14518803071388758]
]

three_round_type_4 = [
    [0.6204879961201961, 0.6232494274994067, 0.6071294314369273, 0.6099478576381676, 0.613601656121333, 0.6150530521071473, 0.6129976242461443, 0.60978589444608, 0.6055339891572998],
    [0.4376437132724736, 0.4358773483983557, 0.4215713340621785, 0.4193577634760146, 0.42032752469243506, 0.41387987703685414, 0.4113855417776301, 0.4040512151008744, 0.4027313053839219],
    [0.16458132484070548, 0.15524222038826344, 0.14294850553745617, 0.14395785915265785, 0.147229166272196, 0.14767764614793574, 0.148872522012557, 0.14515350531164736, 0.14390303328627135]
]


bandwidth = [40000, 20000, 10000, 5000, 2500, 1250, 625, 312, 156]
# communication_volume = 200*200*32
# max_volume = math.log2(communication_volume * 32 // 8)
communication_volume_bytes = [math.log2(b * 32 * 32 // 8) for b in bandwidth]
# box_num = 6.7*5*4*7
# Late_cost = math.log2(box_num * 32 // 8)


fontsize = 20
label_size = 18
legend_size = 17
tick_size = 20
labelsize = 20
point_size = 100
figsize=(5.5,5.5)
params = {
    # 'legend.fontsize': 'x-large',
        # 'figure.figsize': (9, 7),
         'axes.labelsize': 'x-large',
         'axes.titlesize':'x-large',
         'xtick.labelsize':'x-large',
         'ytick.labelsize':'x-large'}
plt.rcParams.update(params)


# Figure1: Compare with SOTAs
metrics = ['AP', 'AP@0.50', 'AP@0.70']
plt.tick_params(labelsize=labelsize)
for i, metric in enumerate(metrics[:3]):
    # fig = plt.figure(figsize=(12,10))
    fig = plt.figure(figsize=figsize)
    ax = fig.add_subplot(111)
    
    # communication_rates, multi_agent_withthre_results = Thre003_communication_rates, Thre003_multi_agent_withthre_results
    for r, multi_agent_withthre_results in enumerate([two_round_type_3, two_round_type_2, two_round_type_1, two_round_type_0]):
        multi_agent_withthre_results = [x * 100 for x in multi_agent_withthre_results[i]]
        plt.plot(communication_volume_bytes, multi_agent_withthre_results, label='-'.join([str(x) for x in two_rounds_ratio[r]]), linewidth=3)

    ratio = 0.82
    xleft, xright = ax.get_xlim()
    ybottom, ytop = ax.get_ylim()
    ax.set_aspect(abs((xright-xleft)/(ybottom-ytop))*ratio)

    # plt.title('{}'.format(metric), size=label_size)
    # plt.xlabel('AP')
    plt.ylabel(metric, size=label_size)
    plt.xlabel('CommunicationVolume(log2)', size=label_size)
    plt.legend(prop={'size': legend_size})
    # plt.ylim(0, 0.4)
    plt.savefig('2Round_{}_vs_Commcost.png'.format(metric))

for i, metric in enumerate(metrics[:3]):
    # fig = plt.figure(figsize=(12,10))
    fig = plt.figure(figsize=figsize)
    ax = fig.add_subplot(111)
    
    # communication_rates, multi_agent_withthre_results = Thre003_communication_rates, Thre003_multi_agent_withthre_results
    # for r, multi_agent_withthre_results in enumerate([three_round_type_0, three_round_type_1, three_round_type_2, three_round_type_3, three_round_type_4]):
    for r, multi_agent_withthre_results in enumerate([three_round_type_2, three_round_type_1, three_round_type_0]):
        multi_agent_withthre_results = [x * 100 for x in multi_agent_withthre_results[i]]
        plt.plot(communication_volume_bytes, multi_agent_withthre_results, label='-'.join([str(x) for x in three_rounds_ratio[r]]), linewidth=3)

    ratio = 0.82
    xleft, xright = ax.get_xlim()
    ybottom, ytop = ax.get_ylim()
    ax.set_aspect(abs((xright-xleft)/(ybottom-ytop))*ratio)

    # plt.title('{}'.format(metric), size=label_size)
    # plt.xlabel('AP')
    plt.ylabel(metric, size=label_size)
    plt.xlabel('CommunicationVolume(log2)', size=label_size)
    plt.legend(prop={'size': legend_size})
    # plt.ylim(0, 0.4)
    plt.savefig('3Round_{}_vs_Commcost.png'.format(metric))
